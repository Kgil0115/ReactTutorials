[{"D:\\development\\react\\react-tutorials\\content-app\\src\\index.js":"1","D:\\development\\react\\react-tutorials\\content-app\\src\\App.js":"2","D:\\development\\react\\react-tutorials\\content-app\\src\\reportWebVitals.js":"3","D:\\development\\react\\react-tutorials\\content-app\\src\\components\\PhoneForm.js":"4","D:\\development\\react\\react-tutorials\\content-app\\src\\components\\PhoneInfoList.js":"5","D:\\development\\react\\react-tutorials\\content-app\\src\\components\\PhoneInfo.js":"6"},{"size":500,"mtime":1608554803847,"results":"7","hashOfConfig":"8"},{"size":1207,"mtime":1608708971613,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608554803847,"results":"10","hashOfConfig":"8"},{"size":1130,"mtime":1608562274367,"results":"11","hashOfConfig":"8"},{"size":757,"mtime":1608709051941,"results":"12","hashOfConfig":"8"},{"size":2537,"mtime":1608729797864,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"gp90re",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\development\\react\\react-tutorials\\content-app\\src\\index.js",[],["28","29"],"D:\\development\\react\\react-tutorials\\content-app\\src\\App.js",["30"],"import React, {Component} from 'react';\nimport PhoneForm from './components/PhoneForm';\nimport PhoneInfoList from './components/PhoneInfoList';\n\nclass App extends Component{\n\n  id =0;\n\n  state = {\n    information: [],\n  }\n\n  handleCreate = (data) => {\n    const {information} = this.state;\n    this.setState({\n      information: information.concat({\n        ...data,\n        id: this.id ++\n      })\n    });\n  }\n\n  handleRemove = (id) => {\n    const {information} = this.state;\n    this.setState({\n      information: information.filter(info => info.id != id)\n    });\n  }\n\n  handleUpdate = (id, data)=> {\n    const {information} = this.state;\n    this.setState({\n      information: information.map(\n        info => {\n          if(info.id === id){\n            return{\n              id,\n              ...data,\n            };\n          }\n          return info;\n        }\n      )\n    })\n  }\n\n  render(){\n    return (\n      <div>\n        <PhoneForm onCreate ={this.handleCreate}></PhoneForm>\n        <PhoneInfoList \n          data = {this.state.information}\n          onRemove = {this.handleRemove}\n          onUpdate = {this.handleUpdate}\n          ></PhoneInfoList>\n      </div>\n    );\n  }\n}\nexport default App;\n","D:\\development\\react\\react-tutorials\\content-app\\src\\reportWebVitals.js",[],"D:\\development\\react\\react-tutorials\\content-app\\src\\components\\PhoneForm.js",[],"D:\\development\\react\\react-tutorials\\content-app\\src\\components\\PhoneInfoList.js",[],"D:\\development\\react\\react-tutorials\\content-app\\src\\components\\PhoneInfo.js",["31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":26,"column":55,"nodeType":"38","messageId":"39","endLine":26,"endColumn":57},{"ruleId":"40","severity":1,"message":"41","line":44,"column":30,"nodeType":"42","messageId":"43","endLine":44,"endColumn":32},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]